{"version":3,"sources":["main.ts"],"names":[],"mappings":"AAAA,IAAI,MAAM,GAAG,QAAQ,CAAC,cAAT,CAAwB,UAAxB,CAAb;AACA,IAAI,GAAG,GAAM,MAAM,CAAC,UAAP,CAAkB,IAAlB,CAAb;AAEA,IAAI,OAAO,GAAG;AACV,EAAA,KAAK,EAAQ,SADH;AAEV,EAAA,IAAI,EAAS,SAFH;AAGV,EAAA,MAAM,EAAO;AAHH,CAAd;;AAMA,SAAS,OAAT,CAAiB,CAAjB,EAAkB;AACd;;;AAGA,MAAI,GAAJ,EAAS,CAAT;;AACA,OAAK,IAAI,CAAC,GAAG,CAAC,CAAC,MAAf,EAAuB,CAAC,GAAG,CAA3B,EAA8B,CAAC,EAA/B,EAAmC;AAC/B,IAAA,CAAC,GAAG,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAgB,CAA3B,CAAJ;AACA,IAAA,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAL,CAAP;AACA,IAAA,CAAC,CAAC,CAAC,GAAG,CAAL,CAAD,GAAW,CAAC,CAAC,CAAD,CAAZ;AACA,IAAA,CAAC,CAAC,CAAD,CAAD,GAAO,GAAP;AACH;AACJ;;AACD,SAAS,IAAT,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,EAA8B;AAC1B,OAAK,CAAL,GAAc,CAAd;AACA,OAAK,CAAL,GAAc,CAAd;AACA,OAAK,CAAL,GAAc,CAAd;AACA,OAAK,CAAL,GAAc,CAAd;AACA,OAAK,GAAL,GAAc,CAAd;AACA,OAAK,GAAL,GAAc,CAAd;AACA,OAAK,MAAL,GAAc,KAAd;AACA,OAAK,MAAL,GAAc,OAAO,CAAC,KAAtB;;AAEA,OAAK,IAAL,GAAY,YAAA;AACR,IAAA,GAAG,CAAC,SAAJ;AACA,IAAA,GAAG,CAAC,IAAJ,CAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,KAAK,CAA9B,EAAiC,KAAK,CAAtC;AACA,IAAA,GAAG,CAAC,SAAJ,GAAgB,KAAK,MAArB;AACA,IAAA,GAAG,CAAC,IAAJ;AACA,IAAA,GAAG,CAAC,SAAJ;AACH,GAND;;AAQA,OAAK,MAAL,GAAc,YAAA;AACV;;;AAGA,SAAK,MAAL,GAAc,OAAO,CAAC,KAAtB;AACA,SAAK,MAAL,GAAc,IAAd;AACH,GAND;AAOH;;AAED,SAAS,KAAT,CAAe,CAAf,EAAgB;AACZ,OAAK,CAAL,GAAc,CAAd;AACA,OAAK,CAAL,GAAc,CAAd;AACA,OAAK,MAAL,GAAc,CAAd;AACA,OAAK,MAAL,GAAc,EAAd;AACA,OAAK,IAAL,GAAc,EAAd,CALY,CAOZ;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,MAAzB,EAAiC,CAAC,EAAlC,EAAsC;AAClC,QAAI,GAAG,GAAG,EAAV;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,MAAzB,EAAiC,CAAC,EAAlC,EAAsC;AAClC,MAAA,GAAG,CAAC,IAAJ,CAAS,IAAI,IAAJ,CAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,KAAK,MAA9B,EAAsC,KAAK,MAA3C,EAAmD,CAAnD,EAAsD,CAAtD,CAAT;AACA,WAAK,CAAL,IAAU,KAAK,MAAL,GAAc,CAAxB;AACH;;AACD,SAAK,IAAL,CAAU,IAAV,CAAe,GAAf;AACA,SAAK,CAAL,GAAS,CAAT;AACA,SAAK,CAAL,IAAU,KAAK,MAAL,GAAc,CAAxB;AACH;;AAED,OAAK,oBAAL,GAA4B,YAAA;AACxB;AACA,IAAA,GAAG,CAAC,SAAJ;AACA,IAAA,GAAG,CAAC,GAAJ,CAAQ,CAAR,EAAU,CAAV,EAAa,KAAK,MAAlB,EAA0B,CAA1B,EAA6B,IAAE,IAAI,CAAC,EAApC;AACA,IAAA,GAAG,CAAC,SAAJ,GAAgB,SAAhB;AACA,IAAA,GAAG,CAAC,IAAJ;AACA,IAAA,GAAG,CAAC,SAAJ;AAEA,IAAA,GAAG,CAAC,IAAJ,GAAW,YAAX;AACA,IAAA,GAAG,CAAC,SAAJ,GAAgB,SAAhB;AACA,IAAA,GAAG,CAAC,QAAJ,CAAa,GAAb,EAAkB,CAAlB,EAAqB,EAArB,EAVwB,CAYxB;;AACA,IAAA,GAAG,CAAC,SAAJ;AACA,IAAA,GAAG,CAAC,GAAJ,CAAQ,MAAM,CAAC,KAAP,GAAc,CAAtB,EAAyB,MAAM,CAAC,MAAP,GAAgB,CAAzC,EAA4C,KAAK,MAAjD,EAAyD,CAAzD,EAA4D,IAAE,IAAI,CAAC,EAAnE;AACA,IAAA,GAAG,CAAC,SAAJ,GAAgB,SAAhB;AACA,IAAA,GAAG,CAAC,IAAJ;AACA,IAAA,GAAG,CAAC,SAAJ;AAEA,IAAA,GAAG,CAAC,IAAJ,GAAW,YAAX;AACA,IAAA,GAAG,CAAC,SAAJ,GAAgB,SAAhB;AACA,IAAA,GAAG,CAAC,QAAJ,CAAa,GAAb,EAAkB,MAAM,CAAC,KAAP,GAAe,EAAjC,EAAqC,MAAM,CAAC,MAAP,GAAe,CAApD;AACH,GAtBD;;AAyBA,OAAK,OAAL,GAAe,YAAA;AACX,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,MAAzB,EAAiC,CAAC,EAAlC,EAAsC;AAClC,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,MAAzB,EAAiC,CAAC,EAAlC,EAAsC;AAClC,aAAK,IAAL,CAAU,CAAV,EAAa,CAAb,EAAgB,IAAhB;AACH;AACJ;;AACD,SAAK,oBAAL;AACH,GAPD;;AASA,OAAK,OAAL,GAAe,UAAS,GAAT,EAAc,GAAd,EAAiB;AAC5B;;;;AAIA,WAAO,KAAK,IAAL,CAAU,GAAV,EAAe,GAAf,CAAP;AACH,GAND;;AAQA,OAAK,SAAL,GAAiB,UAAS,KAAT,EAAgB,KAAhB,EAAqB;AACtC;;;;;;;AAOI,QAAI,KAAK,CAAC,CAAN,GAAU,KAAK,CAAC,CAApB,EAAuB;AACnB,MAAA,KAAK,CAAC,CAAN,IAAU,CAAV;AACH,KAFD,MAGK,IAAI,KAAK,CAAC,CAAN,GAAU,KAAK,CAAC,CAApB,EAAuB;AACxB,MAAA,KAAK,CAAC,CAAN,IAAU,CAAV;AACH,KAFI,MAGA,IAAI,KAAK,CAAC,CAAN,GAAU,KAAK,CAAC,CAApB,EAAuB;AACxB,MAAA,KAAK,CAAC,CAAN,IAAU,CAAV;AACH,KAFI,MAGA,IAAI,KAAK,CAAC,CAAN,GAAU,KAAK,CAAC,CAApB,EAAuB;AACxB,MAAA,KAAK,CAAC,CAAN,IAAU,CAAV;AACH;;AACD,IAAA,KAAK,CAAC,MAAN;AACH,GArBD;;AAuBA,OAAK,aAAL,GAAqB,UAAS,GAAT,EAAc,GAAd,EAAiB;AAClC;;;;AAIA,QAAI,UAAU,GAAG,EAAjB,CALkC,CAOlC;;AACA,QAAI,GAAG,GAAG,CAAV,EAAa;AACT,MAAA,UAAU,CAAC,IAAX,CAAgB,KAAK,IAAL,CAAU,GAAG,GAAC,CAAd,EAAiB,GAAjB,CAAhB;AACH,KAViC,CAWlC;;;AACA,QAAI,GAAG,GAAG,KAAK,MAAL,GAAa,CAAvB,EAA0B;AACtB,MAAA,UAAU,CAAC,IAAX,CAAgB,KAAK,IAAL,CAAU,GAAG,GAAC,CAAd,EAAiB,GAAjB,CAAhB;AACH,KAdiC,CAelC;;;AACA,QAAI,GAAG,GAAG,CAAV,EAAa;AACT,MAAA,UAAU,CAAC,IAAX,CAAgB,KAAK,IAAL,CAAU,GAAV,EAAe,GAAG,GAAC,CAAnB,CAAhB;AACH,KAlBiC,CAmBlC;;;AACA,QAAI,GAAG,GAAG,KAAK,MAAL,GAAa,CAAvB,EAA0B;AACtB,MAAA,UAAU,CAAC,IAAX,CAAgB,KAAK,IAAL,CAAU,GAAV,EAAe,GAAG,GAAC,CAAnB,CAAhB;AACH;;AAED,WAAO,UAAP;AACH,GAzBD;AA0BH;;AAED,SAAS,SAAT,CAAmB,GAAnB,EAAwB,GAAxB,EAA2B;AACvB;;;;;;AAMA,MAAI,QAAQ,GAAK,KAAK,CAAC,OAAN,CAAc,GAAd,EAAmB,GAAnB,CAAjB;AACA,MAAI,UAAU,GAAG,KAAK,CAAC,aAAN,CAAoB,GAApB,EAAyB,GAAzB,CAAjB;AAEA,EAAA,OAAO,CAAC,UAAD,CAAP;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,UAAU,CAAC,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;AACxC,QAAI,CAAE,UAAU,CAAC,CAAD,CAAV,CAAc,MAApB,EAA6B;AACzB,MAAA,KAAK,CAAC,SAAN,CAAgB,QAAhB,EAA0B,UAAU,CAAC,CAAD,CAApC;AACA,MAAA,SAAS,CAAC,UAAU,CAAC,CAAD,CAAV,CAAc,GAAf,EAAoB,UAAU,CAAC,CAAD,CAAV,CAAc,GAAlC,CAAT;AACH;AACJ;AACJ;;AACD,IAAI,KAAK,GAAG,IAAI,KAAJ,CAAU,EAAV,CAAZ;;AAEA,SAAS,QAAT,GAAiB;AACb,MAAI,CAAC,GAAG,KAAK,CAAC,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAAR;AACA,MAAI,CAAC,GAAG,KAAK,CAAC,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAAR;AACA,EAAA,CAAC,CAAC,MAAF;AACA,EAAA,CAAC,CAAC,MAAF;AACA,EAAA,SAAS,CAAC,CAAD,EAAI,CAAJ,CAAT;AACH;;AAED,SAAS,iBAAT,GAA0B;AACtB,MAAI,GAAG,GAAG,CAAV;AACA,MAAI,GAAG,GAAG,CAAV;AACA,MAAI,CAAC,GAAG,KAAK,CAAC,aAAN,CAAoB,GAApB,EAAyB,GAAzB,CAAR;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAAC,CAAC,MAAtB,EAA8B,CAAC,EAA/B,EAAmC;AAC/B,IAAA,OAAO,CAAC,GAAR,CAAY,UAAU,GAAV,GAAe,GAAf,GAAqB,GAArB,GAA2B,GAA3B,GAAiC,CAAC,CAAC,CAAD,CAAD,CAAK,CAAtC,GAA0C,GAA1C,GAAgD,CAAC,CAAC,CAAD,CAAD,CAAK,CAAjE;AACH;AAEJ;;AAED,SAAS,WAAT,GAAoB;AAChB,EAAA,CAAC,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAJ;AACA,EAAA,OAAO,CAAC,CAAD,CAAP;AACA,EAAA,OAAO,CAAC,GAAR,CAAY,CAAZ;AACA,EAAA,CAAC,GAAG,EAAJ;AACA,EAAA,OAAO,CAAC,CAAD,CAAP;AACA,EAAA,OAAO,CAAC,GAAR,CAAY,CAAZ;AACH;;AAGD,IAAI,GAAG,gBAAA;AACH;;;AAGA,EAAA,SAAS,CAAC,CAAD,EAAI,CAAJ,CAAT;AACA,EAAA,KAAK,CAAC,OAAN;AAEH,CAPD;;AAQA,WAAW,CAAC,IAAD,EAAO,EAAP,CAAX","file":"main.c39d6dcf.js","sourceRoot":"..","sourcesContent":["var canvas = document.getElementById(\"myCanvas\");\nvar ctx    = canvas.getContext(\"2d\");\n\nvar colours = {\n    GREEN      : \"#689F38\",\n    GREY       : \"#37474F\",\n    ORANGE     : \"#FFB300\"\n}\n\nfunction shuffle(a) {\n    /**\n     * Shuffles an array in place.\n     */\n    var tmp, j;\n    for (var i = a.length; i > 0; i--) {\n        j = Math.floor(Math.random() * i);\n        tmp = a[i - 1];\n        a[i - 1] = a[j];\n        a[j] = tmp;\n    }\n}\nfunction Node(x, y, h, w, r, c) {\n    this.x      = x;\n    this.y      = y;\n    this.h      = h;\n    this.w      = w;\n    this.row    = r;\n    this.col    = c;\n    this.isOpen = false;\n    this.colour = colours.GREEN;\n\n    this.draw = function() {\n        ctx.beginPath();\n        ctx.rect(this.x, this.y, this.w, this.h);\n        ctx.fillStyle = this.colour; \n        ctx.fill();\n        ctx.closePath();\n    }\n\n    this.openUp = function() {\n        /**\n         * Opens the node up to be travelled to.\n         */\n        this.colour = colours.GREEN;\n        this.isOpen = true;\n    }\n}\n\nfunction Nodes(n) {\n    this.x      = 2;\n    this.y      = 2;\n    this.gridSz = n;\n    this.nodeSz = 20;\n    this.grid   = [];\n\n    //Initialise the 2d nodes array\n    for (var i = 0; i < this.gridSz; i++) {\n        var row = [];\n        for (var j = 0; j < this.gridSz; j++) {\n            row.push(new Node(this.x, this.y, this.nodeSz, this.nodeSz, i, j));\n            this.x += this.nodeSz + 2;\n        }\n        this.grid.push(row);\n        this.x = 2;\n        this.y += this.nodeSz + 2;\n    }\n\n    this.drawStartAndEndNodes = function() {\n        // Start node\n        ctx.beginPath();\n        ctx.arc(2,2, this.nodeSz, 0, 2*Math.PI);\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fill();\n        ctx.closePath();\n\n        ctx.font = \"12pt serif\"\n        ctx.fillStyle = \"#000000\";\n        ctx.fillText(\"S\", 3, 12);\n\n        // End node\n        ctx.beginPath();\n        ctx.arc(canvas.width -2, canvas.height - 2, this.nodeSz, 0, 2*Math.PI);\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fill();\n        ctx.closePath();\n\n        ctx.font = \"12pt serif\"\n        ctx.fillStyle = \"#000000\";\n        ctx.fillText(\"F\", canvas.width - 12, canvas.height -3);\n    }\n    \n\n    this.drawAll = function() {\n        for (var i = 0; i < this.gridSz; i++) {\n            for (var j = 0; j < this.gridSz; j++) {\n                this.grid[i][j].draw();\n            }\n        }\n        this.drawStartAndEndNodes();\n    }\n\n    this.getNode = function(row, col) {\n        /**\n         * returns the node at row, col\n         * @row, col : ints\n         */\n        return this.grid[row][col];\n    }\n\n    this.joinNodes = function(nodeA, nodeB) {\n    /**\n     * Joins the nodes a and b together visually by merging the two boxes\n     * a and b on the canvas.\n     * @nodeA, nodeB : Node type objects\n     * nodeA and nodeB must be directly adjacent i.e. above, \n     * below, left or right.\n     */\n        if (nodeA.x < nodeB.x) {\n            nodeA.w +=2;\n        }\n        else if (nodeB.x < nodeA.x) {\n            nodeB.w +=2;\n        }\n        else if (nodeA.y < nodeB.y) {\n            nodeA.h +=2;\n        }\n        else if (nodeB.y < nodeA.y) {\n            nodeB.h +=2;\n        }\n        nodeB.openUp();\n    }\n\n    this.getNeighbours = function(row, col) {\n        /**\n         * returns an array of nodes which are the node at row, col's neighbours.\n         * @row, col - indicies for the location of the node in grid.\n         */\n        var neighbours = [];\n\n        //left of node\n        if (row > 0) {\n            neighbours.push(this.grid[row-1][col]);\n        }\n        //right of node\n        if (row < this.gridSz -1) {\n            neighbours.push(this.grid[row+1][col]);\n        }\n        //above node\n        if (col > 0) {\n            neighbours.push(this.grid[row][col-1]);\n        }\n        //below node\n        if (col < this.gridSz -1) {\n            neighbours.push(this.grid[row][col+1]);\n        }\n\n        return neighbours;\n    }\n}\n\nfunction generator(row, col) {\n    /**\n     * Generates a maze by randomly joining this node with one of it's \n     * neighbours. This function is then recursively called on the \n     * joined node.\n     * @row, col : integers representing the node's location in the grid\n     */\n    var thisNode   = nodes.getNode(row, col);\n    var neighbours = nodes.getNeighbours(row, col);\n\n    shuffle(neighbours);\n    for (var i = 0; i < neighbours.length; i++) {\n        if (!(neighbours[i].isOpen)) {\n            nodes.joinNodes(thisNode, neighbours[i]);\n            generator(neighbours[i].row, neighbours[i].col);\n        }\n    }\n}\nvar nodes = new Nodes(23);\n\nfunction joinTest() {\n    var a = nodes.getNode(2, 2);\n    var b = nodes.getNode(2, 1);\n    a.openUp()\n    b.openUp();\n    joinNodes(a, b);\n}\n\nfunction getNeighboursTest() {\n    var row = 0;\n    var col = 0;\n    var n = nodes.getNeighbours(row, col);\n    for (var i = 0; i < n.length; i++) {\n        console.log(\"node \" + row +\" \" + col + \" \" + n[i].x + \" \" + n[i].y);\n    }\n\n}\n\nfunction shuffleTest() {\n    a = [0,1,2,3,4,5];\n    shuffle(a);\n    console.log(a);\n    a = []\n    shuffle(a);\n    console.log(a);\n}\n\n\ndraw = function() {\n    /**\n     * Main draw loop\n     */\n    generator(0, 0);\n    nodes.drawAll();\n\n}\nsetInterval(draw, 10);\n\n"]}