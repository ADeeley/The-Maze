{"version":3,"sources":["utils/utils.ts","main.ts"],"names":[],"mappings":"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","file":"main.c39d6dcf.js","sourceRoot":"..","sourcesContent":["export class Utils {\n\tpublic static shuffle<T>(originalArray: Array<T>): Array<T> {\n\t\tconst subjectArray: Array<T> = [...originalArray];\n\t\tfor (let index = subjectArray.length; index > 0; index--) {\n\t\t\tlet randIndex = Math.floor(Math.random() * index);\n\t\t\tlet tmpVal = subjectArray[index - 1];\n\t\t\tsubjectArray[index - 1] = subjectArray[randIndex];\n\t\t\tsubjectArray[randIndex] = tmpVal;\n\t\t}\n\t\treturn subjectArray\n\t}\n}","import { Utils } from \"./utils/utils\";\n\nvar canvas = document.getElementById(\"mazeCanvas\");\nvar ctx = canvas.getContext(\"2d\");\n\nenum colours {\n\tgrey = '#37474F',\n}\n\nfunction Node(x, y, h, w, r, c) {\n\tthis.x = x;\n\tthis.y = y;\n\tthis.h = h;\n\tthis.w = w;\n\tthis.row = r;\n\tthis.col = c;\n\tthis.isOpen = false;\n\tthis.colour = colours.grey;\n\n\tthis.draw = function () {\n\t\tctx.beginPath();\n\t\tctx.rect(this.x, this.y, this.w, this.h);\n\t\tctx.fillStyle = this.colour;\n\t\tctx.fill();\n\t\tctx.closePath();\n\t}\n\n\tthis.openUp = function () {\n        /**\n         * Opens the node up to be travelled to.\n         */\n\t\tthis.colour = colours.grey;\n\t\tthis.isOpen = true;\n\t}\n}\n\nfunction Nodes(n) {\n\tthis.x = 2;\n\tthis.y = 2;\n\tthis.gridSz = n;\n\tthis.nodeSz = 20;\n\tthis.grid = [];\n\n\t//Initialise the 2d nodes array\n\tfor (var i = 0; i < this.gridSz; i++) {\n\t\tvar row = [];\n\t\tfor (var j = 0; j < this.gridSz; j++) {\n\t\t\trow.push(new Node(this.x, this.y, this.nodeSz, this.nodeSz, i, j));\n\t\t\tthis.x += this.nodeSz + 2;\n\t\t}\n\t\tthis.grid.push(row);\n\t\tthis.x = 2;\n\t\tthis.y += this.nodeSz + 2;\n\t}\n\n\tthis.drawStartAndEndNodes = function () {\n\t\t// Start node\n\t\tctx.beginPath();\n\t\tctx.arc(2, 2, this.nodeSz, 0, 2 * Math.PI);\n\t\tctx.fillStyle = \"#ffffff\";\n\t\tctx.fill();\n\t\tctx.closePath();\n\n\t\tctx.font = \"12pt serif\"\n\t\tctx.fillStyle = \"#000000\";\n\t\tctx.fillText(\"S\", 3, 12);\n\n\t\t// End node\n\t\tctx.beginPath();\n\t\tctx.arc(canvas.width - 2, canvas.height - 2, this.nodeSz, 0, 2 * Math.PI);\n\t\tctx.fillStyle = \"#ffffff\";\n\t\tctx.fill();\n\t\tctx.closePath();\n\n\t\tctx.font = \"12pt serif\"\n\t\tctx.fillStyle = \"#000000\";\n\t\tctx.fillText(\"F\", canvas.width - 12, canvas.height - 3);\n\t}\n\n\n\tthis.drawAll = function () {\n\t\tfor (var i = 0; i < this.gridSz; i++) {\n\t\t\tfor (var j = 0; j < this.gridSz; j++) {\n\t\t\t\tthis.grid[i][j].draw();\n\t\t\t}\n\t\t}\n\t\tthis.drawStartAndEndNodes();\n\t}\n\n\tthis.getNode = function (row, col) {\n        /**\n         * returns the node at row, col\n         * @row, col : ints\n         */\n\t\treturn this.grid[row][col];\n\t}\n\n\tthis.joinNodes = function (nodeA, nodeB) {\n\t\t/**\n\t\t * Joins the nodes a and b together visually by merging the two boxes\n\t\t * a and b on the canvas.\n\t\t * @nodeA, nodeB : Node type objects\n\t\t * nodeA and nodeB must be directly adjacent i.e. above,\n\t\t * below, left or right.\n\t\t */\n\t\tif (nodeA.x < nodeB.x) {\n\t\t\tnodeA.w += 2;\n\t\t}\n\t\telse if (nodeB.x < nodeA.x) {\n\t\t\tnodeB.w += 2;\n\t\t}\n\t\telse if (nodeA.y < nodeB.y) {\n\t\t\tnodeA.h += 2;\n\t\t}\n\t\telse if (nodeB.y < nodeA.y) {\n\t\t\tnodeB.h += 2;\n\t\t}\n\t\tnodeB.openUp();\n\t}\n\n\tthis.getNeighbours = function (row, col) {\n        /**\n         * returns an array of nodes which are the node at row, col's neighbours.\n         * @row, col - indicies for the location of the node in grid.\n         */\n\t\tvar neighbours = [];\n\n\t\t//left of node\n\t\tif (row > 0) {\n\t\t\tneighbours.push(this.grid[row - 1][col]);\n\t\t}\n\t\t//right of node\n\t\tif (row < this.gridSz - 1) {\n\t\t\tneighbours.push(this.grid[row + 1][col]);\n\t\t}\n\t\t//above node\n\t\tif (col > 0) {\n\t\t\tneighbours.push(this.grid[row][col - 1]);\n\t\t}\n\t\t//below node\n\t\tif (col < this.gridSz - 1) {\n\t\t\tneighbours.push(this.grid[row][col + 1]);\n\t\t}\n\n\t\treturn neighbours;\n\t}\n}\n\nfunction generator(row, col) {\n    /**\n     * Generates a maze by randomly joining this node with one of it's\n     * neighbours. This function is then recursively called on the\n     * joined node.\n     * @row, col : integers representing the node's location in the grid\n     */\n\tvar thisNode = nodes.getNode(row, col);\n\tvar neighbours = nodes.getNeighbours(row, col);\n\n\tneighbours = Utils.shuffle(neighbours);\n\tfor (var i = 0; i < neighbours.length; i++) {\n\t\tif (!(neighbours[i].isOpen)) {\n\t\t\tnodes.joinNodes(thisNode, neighbours[i]);\n\t\t\tgenerator(neighbours[i].row, neighbours[i].col);\n\t\t}\n\t}\n}\nvar nodes = new Nodes(23);\n\nfunction joinTest() {\n\tvar a = nodes.getNode(2, 2);\n\tvar b = nodes.getNode(2, 1);\n\ta.openUp()\n\tb.openUp();\n\tjoinNodes(a, b);\n}\n\nfunction getNeighboursTest() {\n\tvar row = 0;\n\tvar col = 0;\n\tvar n = nodes.getNeighbours(row, col);\n\tfor (var i = 0; i < n.length; i++) {\n\t\tconsole.log(\"node \" + row + \" \" + col + \" \" + n[i].x + \" \" + n[i].y);\n\t}\n\n}\n\nconst draw = function () {\n    /**\n     * Main draw loop\n     */\n\tgenerator(0, 0);\n\tnodes.drawAll();\n\n}\nsetInterval(draw, 10);\n\n"]}