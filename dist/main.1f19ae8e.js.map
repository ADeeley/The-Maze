{"version":3,"sources":["main.js"],"names":["canvas","document","getElementById","ctx","getContext","colours","GREEN","GREY","ORANGE","shuffle","a","tmp","j","i","length","Math","floor","random","Node","x","y","h","w","r","c","row","col","isOpen","colour","draw","beginPath","rect","fillStyle","fill","closePath","openUp","Nodes","n","gridSz","nodeSz","grid","push","drawStartAndEndNodes","arc","PI","font","fillText","width","height","drawAll","getNode","joinNodes","nodeA","nodeB","getNeighbours","neighbours","generator","thisNode","nodes","joinTest","b","getNeighboursTest","console","log","shuffleTest","setInterval"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["var canvas = document.getElementById(\"myCanvas\");\nvar ctx    = canvas.getContext(\"2d\");\n\nvar colours = {\n    GREEN      : \"#689F38\",\n    GREY       : \"#37474F\",\n    ORANGE     : \"#FFB300\"\n}\n\nfunction shuffle(a) {\n    /**\n     * Shuffles an array in place.\n     */\n    var tmp, j;\n    for (var i = a.length; i > 0; i--) {\n        j = Math.floor(Math.random() * i);\n        tmp = a[i - 1];\n        a[i - 1] = a[j];\n        a[j] = tmp;\n    }\n}\nfunction Node(x, y, h, w, r, c) {\n    this.x      = x;\n    this.y      = y;\n    this.h      = h;\n    this.w      = w;\n    this.row    = r;\n    this.col    = c;\n    this.isOpen = false;\n    this.colour = colours.GREEN;\n\n    this.draw = function() {\n        ctx.beginPath();\n        ctx.rect(this.x, this.y, this.w, this.h);\n        ctx.fillStyle = this.colour; \n        ctx.fill();\n        ctx.closePath();\n    }\n\n    this.openUp = function() {\n        /**\n         * Opens the node up to be travelled to.\n         */\n        this.colour = colours.GREEN;\n        this.isOpen = true;\n    }\n}\n\nfunction Nodes(n) {\n    this.x      = 2;\n    this.y      = 2;\n    this.gridSz = n;\n    this.nodeSz = 20;\n    this.grid   = [];\n\n    //Initialise the 2d nodes array\n    for (var i = 0; i < this.gridSz; i++) {\n        var row = [];\n        for (var j = 0; j < this.gridSz; j++) {\n            row.push(new Node(this.x, this.y, this.nodeSz, this.nodeSz, i, j));\n            this.x += this.nodeSz + 2;\n        }\n        this.grid.push(row);\n        this.x = 2;\n        this.y += this.nodeSz + 2;\n    }\n\n    this.drawStartAndEndNodes = function() {\n        // Start node\n        ctx.beginPath();\n        ctx.arc(2,2, this.nodeSz, 0, 2*Math.PI);\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fill();\n        ctx.closePath();\n\n        ctx.font = \"12pt serif\"\n        ctx.fillStyle = \"#000000\";\n        ctx.fillText(\"S\", 3, 12);\n\n        // End node\n        ctx.beginPath();\n        ctx.arc(canvas.width -2, canvas.height - 2, this.nodeSz, 0, 2*Math.PI);\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fill();\n        ctx.closePath();\n\n        ctx.font = \"12pt serif\"\n        ctx.fillStyle = \"#000000\";\n        ctx.fillText(\"F\", canvas.width - 12, canvas.height -3);\n    }\n    \n\n    this.drawAll = function() {\n        for (var i = 0; i < this.gridSz; i++) {\n            for (var j = 0; j < this.gridSz; j++) {\n                this.grid[i][j].draw();\n            }\n        }\n        this.drawStartAndEndNodes();\n    }\n\n    this.getNode = function(row, col) {\n        /**\n         * returns the node at row, col\n         * @row, col : ints\n         */\n        return this.grid[row][col];\n    }\n\n    this.joinNodes = function(nodeA, nodeB) {\n    /**\n     * Joins the nodes a and b together visually by merging the two boxes\n     * a and b on the canvas.\n     * @nodeA, nodeB : Node type objects\n     * nodeA and nodeB must be directly adjacent i.e. above, \n     * below, left or right.\n     */\n        if (nodeA.x < nodeB.x) {\n            nodeA.w +=2;\n        }\n        else if (nodeB.x < nodeA.x) {\n            nodeB.w +=2;\n        }\n        else if (nodeA.y < nodeB.y) {\n            nodeA.h +=2;\n        }\n        else if (nodeB.y < nodeA.y) {\n            nodeB.h +=2;\n        }\n        nodeB.openUp();\n    }\n\n    this.getNeighbours = function(row, col) {\n        /**\n         * returns an array of nodes which are the node at row, col's neighbours.\n         * @row, col - indicies for the location of the node in grid.\n         */\n        var neighbours = [];\n\n        //left of node\n        if (row > 0) {\n            neighbours.push(this.grid[row-1][col]);\n        }\n        //right of node\n        if (row < this.gridSz -1) {\n            neighbours.push(this.grid[row+1][col]);\n        }\n        //above node\n        if (col > 0) {\n            neighbours.push(this.grid[row][col-1]);\n        }\n        //below node\n        if (col < this.gridSz -1) {\n            neighbours.push(this.grid[row][col+1]);\n        }\n\n        return neighbours;\n    }\n}\n\nfunction generator(row, col) {\n    /**\n     * Generates a maze by randomly joining this node with one of it's \n     * neighbours. This function is then recursively called on the \n     * joined node.\n     * @row, col : integers representing the node's location in the grid\n     */\n    var thisNode   = nodes.getNode(row, col);\n    var neighbours = nodes.getNeighbours(row, col);\n\n    shuffle(neighbours);\n    for (var i = 0; i < neighbours.length; i++) {\n        if (!(neighbours[i].isOpen)) {\n            nodes.joinNodes(thisNode, neighbours[i]);\n            generator(neighbours[i].row, neighbours[i].col);\n        }\n    }\n}\nvar nodes = new Nodes(23);\n\nfunction joinTest() {\n    var a = nodes.getNode(2, 2);\n    var b = nodes.getNode(2, 1);\n    a.openUp()\n    b.openUp();\n    joinNodes(a, b);\n}\n\nfunction getNeighboursTest() {\n    var row = 0;\n    var col = 0;\n    var n = nodes.getNeighbours(row, col);\n    for (var i = 0; i < n.length; i++) {\n        console.log(\"node \" + row +\" \" + col + \" \" + n[i].x + \" \" + n[i].y);\n    }\n\n}\n\nfunction shuffleTest() {\n    a = [0,1,2,3,4,5];\n    shuffle(a);\n    console.log(a);\n    a = []\n    shuffle(a);\n    console.log(a);\n}\n\n\ndraw = function() {\n    /**\n     * Main draw loop\n     */\n    generator(0, 0);\n    nodes.drawAll();\n\n}\nsetInterval(draw, 10);\n\n"]}